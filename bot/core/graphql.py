from enum import Enum


class Query(str, Enum):
    QUERY_GAME_CONFIG = "query QUERY_GAME_CONFIG {\n  telegramGameGetConfig {\n    ...FragmentBossFightConfig\n    __typename\n  }\n}\n\nfragment FragmentBossFightConfig on TelegramGameConfigOutput {\n  _id\n  coinsAmount\n  currentEnergy\n  maxEnergy\n  weaponLevel\n  zonesCount\n  tapsReward\n  energyLimitLevel\n  energyRechargeLevel\n  tapBotLevel\n  currentBoss {\n    _id\n    level\n    currentHealth\n    maxHealth\n    __typename\n  }\n  freeBoosts {\n    _id\n    currentTurboAmount\n    maxTurboAmount\n    turboLastActivatedAt\n    turboAmountLastRechargeDate\n    currentRefillEnergyAmount\n    maxRefillEnergyAmount\n    refillEnergyLastActivatedAt\n    refillEnergyAmountLastRechargeDate\n    __typename\n  }\n  bonusLeaderDamageEndAt\n  bonusLeaderDamageStartAt\n  bonusLeaderDamageMultiplier\n  nonce\n  spinEnergyNextRechargeAt\n  spinEnergyNonRefillable\n  spinEnergyRefillable\n  spinEnergyTotal\n  spinEnergyStaticLimit\n  __typename\n}"
    MutationTelegramUserLogin = "mutation MutationTelegramUserLogin($webAppData: TelegramWebAppDataInput!, $referralCode: String) {\n  telegramUserLogin(webAppData: $webAppData, referralCode: $referralCode) {\n    access_token\n    __typename\n  }\n}"
    MutationGameProcessTapsBatch = "mutation MutationGameProcessTapsBatch($payload: TelegramGameTapsBatchInput!) {\n  telegramGameProcessTapsBatch(payload: $payload) {\n    ...FragmentBossFightConfig\n    __typename\n  }\n}\n\nfragment FragmentBossFightConfig on TelegramGameConfigOutput {\n  _id\n  coinsAmount\n  currentEnergy\n  maxEnergy\n  weaponLevel\n  zonesCount\n  tapsReward\n  energyLimitLevel\n  energyRechargeLevel\n  tapBotLevel\n  currentBoss {\n    _id\n    level\n    currentHealth\n    maxHealth\n    __typename\n  }\n  freeBoosts {\n    _id\n    currentTurboAmount\n    maxTurboAmount\n    turboLastActivatedAt\n    turboAmountLastRechargeDate\n    currentRefillEnergyAmount\n    maxRefillEnergyAmount\n    refillEnergyLastActivatedAt\n    refillEnergyAmountLastRechargeDate\n    __typename\n  }\n  bonusLeaderDamageEndAt\n  bonusLeaderDamageStartAt\n  bonusLeaderDamageMultiplier\n  nonce\n  spinEnergyNextRechargeAt\n  spinEnergyNonRefillable\n  spinEnergyRefillable\n  spinEnergyTotal\n  spinEnergyStaticLimit\n  __typename\n}"
    telegramGameSetNextBoss = "mutation telegramGameSetNextBoss {\n telegramGameSetNextBoss {\n ...FragmentBossFightConfig\n __typename\n }\n}\n\nfragment FragmentBossFightConfig on TelegramGameConfigOutput {\n _id\n coinsAmount\n currentEnergy\n maxEnergy\n weaponLevel\n zonesCount\n tapsReward\n energyLimitLevel\n energyRechargeLevel\n tapBotLevel\n currentBoss {\n _id\n level\n currentHealth\n maxHealth\n __typename\n }\n freeBoosts {\n _id\n currentTurboAmount\n maxTurboAmount\n turboLastActivatedAt\n turboAmountLastRechargeDate\n currentRefillEnergyAmount\n maxRefillEnergyAmount\n refillEnergyLastActivatedAt\n refillEnergyAmountLastRechargeDate\n __typename\n }\n bonusLeaderDamageEndAt\n bonusLeaderDamageStartAt\n bonusLeaderDamageMultiplier\n nonce\n __typename\n}"
    telegramGameActivateBooster = "mutation telegramGameActivateBooster($boosterType: BoosterType!) {\n  telegramGameActivateBooster(boosterType: $boosterType) {\n    ...FragmentBossFightConfig\n    __typename\n  }\n}\n\nfragment FragmentBossFightConfig on TelegramGameConfigOutput {\n  _id\n  coinsAmount\n  currentEnergy\n  maxEnergy\n  weaponLevel\n  energyLimitLevel\n  energyRechargeLevel\n  tapBotLevel\n  currentBoss {\n    _id\n    level\n    currentHealth\n    maxHealth\n    __typename\n  }\n  freeBoosts {\n    _id\n    currentTurboAmount\n    maxTurboAmount\n    turboLastActivatedAt\n    turboAmountLastRechargeDate\n    currentRefillEnergyAmount\n    maxRefillEnergyAmount\n    refillEnergyLastActivatedAt\n    refillEnergyAmountLastRechargeDate\n    __typename\n  }\n  nonce\n  __typename\n}"
    telegramGamePurchaseUpgrade = "mutation telegramGamePurchaseUpgrade($upgradeType: UpgradeType!) {\n  telegramGamePurchaseUpgrade(type: $upgradeType) {\n    ...FragmentBossFightConfig\n    __typename\n  }\n}\n\nfragment FragmentBossFightConfig on TelegramGameConfigOutput {\n  _id\n  coinsAmount\n  currentEnergy\n  maxEnergy\n  weaponLevel\n  energyLimitLevel\n  energyRechargeLevel\n  tapBotLevel\n  currentBoss {\n    _id\n    level\n    currentHealth\n    maxHealth\n    __typename\n  }\n  freeBoosts {\n    _id\n    currentTurboAmount\n    maxTurboAmount\n    turboLastActivatedAt\n    turboAmountLastRechargeDate\n    currentRefillEnergyAmount\n    maxRefillEnergyAmount\n    refillEnergyLastActivatedAt\n    refillEnergyAmountLastRechargeDate\n    __typename\n  }\n  nonce\n  __typename\n}"
    QueryTelegramUserMe = "query QueryTelegramUserMe {\n  telegramUserMe {\n    firstName\n    lastName\n    telegramId\n    username\n    referralCode\n    isDailyRewardClaimed\n    createdInSeason\n    season\n    allocationNano\n    okxClaimedAllocationNano\n    isCheatDetected\n    referral {\n      username\n      lastName\n      firstName\n      bossLevel\n      coinsAmount\n      __typename\n    }\n    isReferralInitialJoinBonusAvailable\n    league\n    leagueIsOverTop10k\n    leaguePosition\n    _id\n    opens {\n      isAvailable\n      openType\n      __typename\n    }\n    features\n    role\n    earlyAdopterBonusAmount\n    earlyAdopterBonusPercentage\n    hasPremiumSubscription\n    binanceTask {\n      binanceId\n      status\n      completionRewardCoins\n      validationRewardCoins\n      __typename\n    }\n    okxTask {\n      completionRewardCoins\n      okxWallet\n      status\n      okxTonWallet\n      __typename\n    }\n    okxSuiTask {\n      completionRewardCoins\n      okxSuiWallet\n      status\n      __typename\n    }\n    okxKycTask {\n      completionRewardCoins\n      okxId\n      status\n      __typename\n    }\n    tonShopTask {\n      coinsReward\n      spinEnergyReward\n      completedAt\n      minPurchasedSpinEnergy\n      startedAt\n      __typename\n    }\n    __typename\n  }\n}"
    TapbotConfig = "fragment FragmentTapBotConfig on TelegramGameTapbotOutput {\n  damagePerSec\n  endsAt\n  id\n  isPurchased\n  startsAt\n  totalAttempts\n  usedAttempts\n  __typename\n}\n\nquery TapbotConfig {\n  telegramGameTapbotGetConfig {\n    ...FragmentTapBotConfig\n    __typename\n  }\n}"
    TapbotStart = "fragment FragmentTapBotConfig on TelegramGameTapbotOutput {\n  damagePerSec\n  endsAt\n  id\n  isPurchased\n  startsAt\n  totalAttempts\n  usedAttempts\n  __typename\n}\n\nmutation TapbotStart {\n  telegramGameTapbotStart {\n    ...FragmentTapBotConfig\n    __typename\n  }\n}"
    TapbotClaim = "fragment FragmentTapBotConfig on TelegramGameTapbotOutput {\n  damagePerSec\n  endsAt\n  id\n  isPurchased\n  startsAt\n  totalAttempts\n  usedAttempts\n  __typename\n}\n\nmutation TapbotClaim {\n  telegramGameTapbotClaimCoins {\n    ...FragmentTapBotConfig\n    __typename\n  }\n}"
    Mutation = "mutation Mutation {\n  telegramUserClaimReferralBonus\n}"
    ClanMy = "fragment FragmentClanProfile on ClanProfileOutput {\n id\n clanDetails {\n id\n name\n rarity\n username\n avatarImageUrl\n coinsAmount\n createdAt\n description\n membersCount\n __typename\n }\n clanOwner {\n id\n userId\n username\n avatarImageUrl\n coinsAmount\n currentBossLevel\n firstName\n lastName\n isClanOwner\n isMe\n __typename\n }\n __typename\n}\n\nquery ClanMy {\n clanMy {\n ...FragmentClanProfile\n __typename\n }\n}"
    Leave = "mutation Mutation {\n  clanActionLeaveClan\n}"
    Join = "mutation ClanActionJoinClan($clanId: String!) {\n clanActionJoinClan(clanId: $clanId)\n}"
    SpinSlotMachine = "fragment FragmentBossFightConfig on TelegramGameConfigOutput {\n  _id\n  coinsAmount\n  currentEnergy\n  maxEnergy\n  weaponLevel\n  zonesCount\n  tapsReward\n  energyLimitLevel\n  energyRechargeLevel\n  tapBotLevel\n  currentBoss {\n    _id\n    level\n    currentHealth\n    maxHealth\n    __typename\n  }\n  freeBoosts {\n    _id\n    currentTurboAmount\n    maxTurboAmount\n    turboLastActivatedAt\n    turboAmountLastRechargeDate\n    currentRefillEnergyAmount\n    maxRefillEnergyAmount\n    refillEnergyLastActivatedAt\n    refillEnergyAmountLastRechargeDate\n    __typename\n  }\n  bonusLeaderDamageEndAt\n  bonusLeaderDamageStartAt\n  bonusLeaderDamageMultiplier\n  nonce\n  spinEnergyNextRechargeAt\n  spinEnergyNonRefillable\n  spinEnergyRefillable\n  spinEnergyTotal\n  spinEnergyStaticLimit\n  __typename\n}\n\nmutation spinSlotMachine($payload: SlotMachineSpinInput!) {\n  slotMachineSpinV2(payload: $payload) {\n    gameConfig {\n\t...FragmentBossFightConfig\n\t__typename\n    }\n    spinResults {\n\tid\n\tcombination\n\trewardAmount\n\trewardType\n\tquestItemsFromSpin\n\t__typename\n    }\n    spinsProcessedCount\n    previousProgressBarConfig {\n\tid\n\tquestItem\n\tstatus\n\trequiredQuestItems\n\tcollectedQuestItems\n\trewardType\n\trewardAmount\n\tquestEventEndsAt\n\tquestIndex\n\tquestLevel\n\t__typename\n    }\n    nextProgressBarConfig {\n\tid\n\tquestItem\n\tstatus\n\trequiredQuestItems\n\tcollectedQuestItems\n\trewardType\n\trewardAmount\n\tquestEventEndsAt\n\tquestIndex\n\tquestLevel\n\t__typename\n    }\n    progressBarReward {\n\trewardType\n\trewardAmount\n\t__typename\n    }\n    ethLotteryConfig {\n\trequiredItems\n\tcollectedItems\n\tisCompleted\n\tticketNumber\n\titemsFromSpin\n\tmaybePreviousCycleWinner {\n\t  id\n\t  name\n\t  bossLevel\n\t  ticketNumber\n\t  rewardEth {\n\t    currency\n\t    amount\n\t    __typename\n\t  }\n\t  rewardUsd {\n\t    currency\n\t    amount\n\t    __typename\n\t  }\n\t  isCurrentUser\n\t  __typename\n\t}\n\t__typename\n    }\n    __typename\n  }\n}"
    TelegramMemefiWallet = "query TelegramMemefiWallet {\n  telegramMemefiWallet {\n    walletAddress\n    dropMemefiAmountWei\n    signedTransaction {\n\tcontractAddress\n\tfunctionName\n\tcontractType\n\tdeadline\n\tnativeTokenValue\n\tchainId\n\texecTransactionValuesStringified\n\t__typename\n    }\n    __typename\n  }\n}"
    TelegramWalletLink = "mutation TelegramWalletLink($input: TelegramMemefiWalletLinkInput!) {\n  telegramWalletLink(input: $input)\n}"
    CampaignLists = "fragment FragmentCampaign on CampaignOutput {\n  id\n  type\n  status\n  backgroundImageUrl\n  campaignUserParticipationId\n  completedTotalTasksAmount\n  description\n  endDate\n  iconUrl\n  isStarted\n  name\n  completionReward {\n    spinEnergyReward\n    coinsReward\n    claimedAt\n    id\n    __typename\n  }\n  totalRewardsPool\n  totalTasksAmount\n  collectedRewardsAmount\n  penaltyAmount\n  penaltySpinEnergyAmount\n  collectedSpinEnergyRewardsAmount\n  totalSpinEnergyRewardsPool\n  __typename\n}\n\nquery CampaignLists {\n  campaignLists {\n    special {\n\t...FragmentCampaign\n\t__typename\n    }\n    normal {\n\t...FragmentCampaign\n\t__typename\n    }\n    archivedCount\n    __typename\n  }\n}"
    GetTasksList = "fragment FragmentCampaignTask on CampaignTaskOutput {\n  id\n  name\n  description\n  status\n  type\n  position\n  buttonText\n  coinsRewardAmount\n  spinEnergyRewardAmount\n  link\n  userTaskId\n  isRequired\n  iconUrl\n  taskVerificationType\n  verificationAvailableAt\n  shouldUseVpn\n  isLinkInternal\n  quiz {\n    id\n    question\n    answers\n    __typename\n  }\n  __typename\n}\n\nquery GetTasksList($campaignId: String!) {\n  campaignTasks(campaignConfigId: $campaignId) {\n    ...FragmentCampaignTask\n    __typename\n  }\n}"
    GetCampaignById = "fragment FragmentCampaign on CampaignOutput {\n  id\n  type\n  status\n  backgroundImageUrl\n  campaignUserParticipationId\n  completedTotalTasksAmount\n  description\n  endDate\n  iconUrl\n  isStarted\n  name\n  completionReward {\n    spinEnergyReward\n    coinsReward\n    claimedAt\n    id\n    __typename\n  }\n  totalRewardsPool\n  totalTasksAmount\n  collectedRewardsAmount\n  penaltyAmount\n  penaltySpinEnergyAmount\n  collectedSpinEnergyRewardsAmount\n  totalSpinEnergyRewardsPool\n  __typename\n}\n\nquery GetCampaignById($campaignId: String!) {\n  campaignGetById(campaignId: $campaignId) {\n    ...FragmentCampaign\n    __typename\n  }\n}"
    CampaignTaskToVerification = "fragment FragmentCampaignTask on CampaignTaskOutput {\n  id\n  name\n  description\n  status\n  type\n  position\n  buttonText\n  coinsRewardAmount\n  spinEnergyRewardAmount\n  link\n  userTaskId\n  isRequired\n  iconUrl\n  taskVerificationType\n  verificationAvailableAt\n  shouldUseVpn\n  isLinkInternal\n  quiz {\n    id\n    question\n    answers\n    __typename\n  }\n  __typename\n}\n\nmutation CampaignTaskToVerification($taskConfigId: String!) {\n  campaignTaskMoveToVerificationV2(taskConfigId: $taskConfigId) {\n    ...FragmentCampaignTask\n    __typename\n  }\n}"
    GetTaskById = "fragment FragmentCampaignTask on CampaignTaskOutput {\n  id\n  name\n  description\n  status\n  type\n  position\n  buttonText\n  coinsRewardAmount\n  spinEnergyRewardAmount\n  link\n  userTaskId\n  isRequired\n  iconUrl\n  taskVerificationType\n  verificationAvailableAt\n  shouldUseVpn\n  isLinkInternal\n  quiz {\n    id\n    question\n    answers\n    __typename\n  }\n  __typename\n}\n\nquery GetTaskById($taskId: String!) {\n  campaignTaskGetConfig(taskId: $taskId) {\n    ...FragmentCampaignTask\n    __typename\n  }\n}"
    CampaignTaskMarkAsCompleted = "fragment FragmentCampaignTask on CampaignTaskOutput {\n  id\n  name\n  description\n  status\n  type\n  position\n  buttonText\n  coinsRewardAmount\n  spinEnergyRewardAmount\n  link\n  userTaskId\n  isRequired\n  iconUrl\n  taskVerificationType\n  verificationAvailableAt\n  shouldUseVpn\n  isLinkInternal\n  quiz {\n    id\n    question\n    answers\n    __typename\n  }\n  __typename\n}\n\nmutation CampaignTaskMarkAsCompleted($userTaskId: String!, $verificationCode: String, $quizAnswers: [CampaignTaskQuizQuestionInput!]) {\n  campaignTaskMarkAsCompleted(\n    userTaskId: $userTaskId\n    verificationCode: $verificationCode\n    quizAnswers: $quizAnswers\n  ) {\n    ...FragmentCampaignTask\n    __typename\n  }\n}"
    MutationCatsOkxComplete = "mutation MutationCatsOkxComplete(^$payload: SimonCatOkxTaskInput^!) {\n  simonsCatCompleteOkxTask(payload: ^$payload)\n}"
    OkxStatuses = "query QueryTelegramUserMe {\n  telegramUserMe {\n    firstName\n    lastName\n    telegramId\n    username\n    referralCode\n    isDailyRewardClaimed\n    allocationNano\n    referral {\n\tusername\n\tlastName\n\tfirstName\n\tbossLevel\n\tcoinsAmount\n\t__typename\n    }\n    isReferralInitialJoinBonusAvailable\n    league\n    leagueIsOverTop10k\n    leaguePosition\n    _id\n    opens {\n\tisAvailable\n\topenType\n\t__typename\n    }\n    features\n    role\n    earlyAdopterBonusAmount\n    earlyAdopterBonusPercentage\n    hasPremiumSubscription\n    binanceTask {\n\tbinanceId\n\tstatus\n\tcompletionRewardCoins\n\tvalidationRewardCoins\n\t__typename\n    }\n    okxTask {\n\tcompletionRewardCoins\n\tokxWallet\n\tstatus\n\tokxTonWallet\n\t__typename\n    }\n    okxSuiTask {\n\tcompletionRewardCoins\n\tokxSuiWallet\n\tstatus\n\t__typename\n    }\n    okxKycTask {\n\tcompletionRewardCoins\n\tokxId\n\tstatus\n\t__typename\n    }\n    tonShopTask {\n\tcoinsReward\n\tspinEnergyReward\n\tcompletedAt\n\tminPurchasedSpinEnergy\n\tstartedAt\n\t__typename\n    }\n    __typename\n  }\n}"
    AirdropTodoTasks = "query AirdropTodoTasks {\n  airdropTodoTasks {\n    campaigns {\n      currentAmount\n      done\n      requiredAmount\n      __typename\n    }\n    coins {\n      currentAmount\n      done\n      requiredAmount\n      __typename\n    }\n    ethLotteryTickets {\n      currentAmount\n      done\n      requiredAmount\n      __typename\n    }\n    premium {\n      done\n      __typename\n    }\n    starTransactions {\n      currentAmount\n      done\n      requiredAmount\n      __typename\n    }\n    tonTransactions {\n      currentAmount\n      done\n      requiredAmount\n      __typename\n    }\n    __typename\n  }\n}"
    AirdropOkxOffChainClaimWalletConfig = "query AirdropOkxOffChainClaimWalletConfig {\n  airdropOkxOffChainClaimWalletConfig {\n    canChangeUntil\n    wallet {\n      okxId\n      walletAddress\n      __typename\n    }\n    __typename\n  }\n}"

class OperationName(str, Enum):
    QUERY_GAME_CONFIG = "QUERY_GAME_CONFIG"
    MutationTelegramUserLogin = "MutationTelegramUserLogin"
    MutationGameProcessTapsBatch = "MutationGameProcessTapsBatch"
    telegramGameSetNextBoss = "telegramGameSetNextBoss"
    telegramGameActivateBooster = "telegramGameActivateBooster"
    telegramGamePurchaseUpgrade = "telegramGamePurchaseUpgrade"
    QueryTelegramUserMe = "QueryTelegramUserMe"
    TapbotConfig = "TapbotConfig"
    TapbotStart = "TapbotStart"
    TapbotClaim = "TapbotClaim"
    Mutation = "Mutation"
    ClanMy = "ClanMy"
    Leave = "Mutation"
    Join = "ClanActionJoinClan"
    SpinSlotMachine = "spinSlotMachine"
    TelegramMemefiWallet = "TelegramMemefiWallet"
    TelegramWalletLink = "TelegramWalletLink"
    CampaignLists = "CampaignLists"
    GetTasksList = "GetTasksList"
    GetCampaignById = "GetCampaignById"
    MutationCatsOkxComplete = "MutationCatsOkxComplete"
    OkxStatuses = "QueryTelegramUserMe"
    AirdropTodoTasks = "AirdropTodoTasks"
    AirdropOkxOffChainClaimWalletConfig = "AirdropOkxOffChainClaimWalletConfig"
